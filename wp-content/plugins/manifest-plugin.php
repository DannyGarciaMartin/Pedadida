<?php
/*
Plugin Name: html5 Cache Manifest for Wordpress Themes
Version: 1.0
Plugin URI: http://patrick.bloggles.info/
Description: Use cache manifest in wordpress themes
Author: Patrick Chia
Author URI: http://patrick.bloggles.info/
*/

global $wp_version;
if( version_compare( $wp_version, "3.1", "<" ) ){
    exit( 'This plugin requires php5 and WordPress 3.1 or newer. <a href="http://codex.wordpress.org/Upgrading_WordPress">Please update!</a>' );
}

function manifest_footer(){
	$manifest_file = get_stylesheet_directory_uri() .'/manifest.html';
	if ( is_readable( get_stylesheet_directory() .'/manifest.html' ) ) {
?>
<div class="manifest" style="display:none;"></div>
<script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js'></script>
<script type='text/javascript'>
	if (jQuery.browser.webkit) {
		jQuery(".manifest").replaceWith( "<iframe style='display:none' frameborder='0' height='0' src='<?php echo $manifest_file; ?>'></iframe>" );
	}
</script>
<?php
	}

}
add_action('wp_footer','manifest_footer');

function _add_manifest_file(){
	// from www.sitesketch101.com/creating-a-dynamic-html5-cache-manifest/ 
	$hashes = "";
	$network = array("\n\nNETWORK:");
	$cache = array("\n\nCACHE:");
	$ignore = array("error_log","html", ".dev.", "screenshot", ".txt", "psd", "psd", "manifest", "_.", "!");

	$path = get_stylesheet_directory()."/";
	$dir = new RecursiveDirectoryIterator( $path );
 
	foreach(new RecursiveIteratorIterator($dir) as $file) {
		if ($file->IsFile() && $file != "./manifest.php" && substr($file->getFilename(), 0, 1) != ".") {
			if(preg_match('/.php$/', $file)) {
				if (isAllowedExtension($file))
					array_push($network,"\n" . str_replace($path, './', $file));

			} else {
				if (isAllowedExtension($file))
					array_push($cache,"\n" . str_replace($path, './', $file));
			}

			$hashes .= md5_file($file);
		}
	}

 
	$fh = fopen( get_stylesheet_directory().'/cache.manifest', 'w' );
	fwrite($fh,'CACHE MANIFEST');
 
	foreach($cache as $file){ fwrite($fh,$file); }
	foreach($network as $file){ fwrite($fh,$file);}
	fwrite($fh,"\nhSpecific Entry");
	fwrite($fh, "\n\n# Hash:" . md5($hashes)); 
	fwrite($fh, "\n\n# Generated by html5 Cache Manifest for Wordpress Themes Plugin: http://patrickchia.com/"); 
	fclose($fh);

	$manifest_file = get_stylesheet_directory() .'/manifest.html';

	if ( !file_exists($manifest_file) ) {
			$fh = fopen( get_stylesheet_directory().'/manifest.html', 'w' );
			fwrite($fh, "<!DOCTYPE html>\n");
			fwrite($fh, "<html manifest=\"cache.manifest\">\n");
			fwrite($fh, "<head><meta charset=\"utf-8\" /><title>cache</title></head>\n");
			fwrite($fh, "<body>Generated by html5 Cache Manifest for Wordpress Themes http://patrickchia.com/</body>\n");
			fwrite($fh, "</html>\n");
			fclose($fh);
	}

}

function isAllowedExtension($file) {
	$allowedExtensions = array("php", "gif", "png", "jpg", "js", "css");
	return in_array(end(explode(".", $file)), $allowedExtensions);
}

function remove_manifest_file(){
	$files = array( get_stylesheet_directory() .'/manifest.html', get_stylesheet_directory().'/cache.manifest' );
	foreach( $files as $file ) {
		if( file_exists( $file ) )
		unlink( $file );
	}
}

register_activation_hook( __FILE__, '_add_manifest_file' );

register_deactivation_hook( __FILE__, 'remove_manifest_file' );

?>